<?xml version="1.0"?>
<doc>
    <assembly>
        <name>webapi.event+</name>
    </assembly>
    <members>
        <member name="P:webapi.event_.Controllers.EventoController._eventoRepository">
            <summary>
            Objeto que irá receber os métodos definidos na interface
            </summary>
        </member>
        <member name="M:webapi.event_.Controllers.EventoController.#ctor">
            <summary>
            Instância do objeto _tipoUsuarioRepository para que haja referência aos mêtodos no repositório
            </summary>
        </member>
        <member name="M:webapi.event_.Controllers.EventoController.Put(System.Guid,webapi.event_.Domains.Evento)">
            <summary>
            Atualizar Tipo de Usuário existente passando o seu id
            </summary>
            <param name="id">Id do Objeto a ser atualizado</param>
            <param name="evento">Objeto Tipo de Usuário com as novas informações</param>
            <returns></returns>
        </member>
        <member name="M:webapi.event_.Controllers.EventoController.Delete(System.Guid)">
            <summary>
            Deletar o Objeto pelo seu Id
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="T:webapi.event_.Controllers.InstituicaoController">
            <summary>
            Define que a rota de uma requisição será no seguinte formato
            dominio/api/nomeController
            exemplo: http://localhost:5000/api/Genero
            </summary>
        </member>
        <member name="P:webapi.event_.Controllers.InstituicaoController._instituicaoRepository">
            <summary>
            Objeto que irá receber os métodos definidos na interface
            </summary>
        </member>
        <member name="M:webapi.event_.Controllers.InstituicaoController.#ctor">
            <summary>
            Instância do objeto _instituicaoRepository para que haja referência aos mêtodos no repositório
            </summary>
        </member>
        <member name="M:webapi.event_.Controllers.InstituicaoController.Post(webapi.event_.Domains.Instituicao)">
            <summary>
            Endpoint que acessa o método de cadastrar Instituição
            </summary>
            <param name="instituicao">Objeto recebido na requisição</param>
            <returns>Status Code</returns>
        </member>
        <member name="M:webapi.event_.Controllers.InstituicaoController.Get">
            <summary>
            Endpoint que acessa o método de listar as Instituições
            </summary>
            <returns>Lista de Instituicao e um status code</returns>
        </member>
        <member name="M:webapi.event_.Controllers.InstituicaoController.Put(System.Guid,webapi.event_.Domains.Instituicao)">
            <summary>
            Atualizar Instituição existente passando o seu id
            </summary>
            <param name="id">Id do Objeto a ser atualizado</param>
            <param name="instituicao">Objeto Tipo de Usuário com as novas informações</param>
            <returns>Status Code</returns>
        </member>
        <member name="M:webapi.event_.Controllers.InstituicaoController.Delete(System.Guid)">
            <summary>
            Deletar o Objeto pelo seu Id
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="P:webapi.event_.Controllers.PresencaEventoController._presencaEventoRepository">
            <summary>
            Objeto que irá receber os métodos definidos na interface
            </summary>
        </member>
        <member name="M:webapi.event_.Controllers.PresencaEventoController.#ctor">
            <summary>
            Instância do objeto _presencaEventoRepository para que haja referência aos mêtodos no repositório
            </summary>
        </member>
        <member name="T:webapi.event_.Controllers.TipoEventoController">
            <summary>
            Define que a rota de uma requisição será no seguinte formato
            dominio/api/nomeController
            exemplo: http://localhost:5000/api/Genero
            </summary>
        </member>
        <member name="P:webapi.event_.Controllers.TipoEventoController._tipoEventoRepository">
            <summary>
            Objeto que irá receber os métodos definidos na interface
            </summary>
        </member>
        <member name="M:webapi.event_.Controllers.TipoEventoController.#ctor">
            <summary>
            Instância do objeto _filmeRepository para que haja referência aos mêtodos no repositório
            </summary>
        </member>
        <member name="M:webapi.event_.Controllers.TipoEventoController.Post(webapi.event_.Domains.TipoEvento)">
            <summary>
            Endpoint que acessa o método de cadastrar Tipo de Evento
            </summary>
            <param name="tipoEvento">Objeto recebido na requisição</param>
            <returns>Status Code</returns>
        </member>
        <member name="M:webapi.event_.Controllers.TipoEventoController.Get">
            <summary>
            Endpoint que acessa o método de listar os Tipos de Evento
            </summary>
            <returns>Lista de TipoEvento e um status code</returns>
        </member>
        <member name="M:webapi.event_.Controllers.TipoEventoController.Put(System.Guid,webapi.event_.Domains.TipoEvento)">
            <summary>
            Atualizar Tipo de Usuário existente passando o seu id
            </summary>
            <param name="id">Id do Objeto a ser atualizado</param>
            <param name="tipoEvento">Objeto Tipo de Usuário com as novas informações</param>
            <returns>Status Code</returns>
        </member>
        <member name="T:webapi.event_.Controllers.TipoUsuarioController">
            <summary>
            Define que a rota de uma requisição será no seguinte formato
            dominio/api/nomeController
            exemplo: http://localhost:5000/api/Genero
            </summary>
        </member>
        <member name="P:webapi.event_.Controllers.TipoUsuarioController._tipoUsuarioRepository">
            <summary>
            Objeto que irá receber os métodos definidos na interface
            </summary>
        </member>
        <member name="M:webapi.event_.Controllers.TipoUsuarioController.#ctor">
            <summary>
            Instância do objeto _tipoUsuarioRepository para que haja referência aos mêtodos no repositório
            </summary>
        </member>
        <member name="M:webapi.event_.Controllers.TipoUsuarioController.Post(webapi.event_.Domains.TipoUsuario)">
            <summary>
            Endpoint que acessa o método de cadastrar Tipo de Usuário
            </summary>
            <param name="tipoUsuario">Objeto recebido na requisição</param>
            <returns>Status Code</returns>
        </member>
        <member name="M:webapi.event_.Controllers.TipoUsuarioController.Get">
            <summary>
            Endpoint que acessa o método de listar os Tipos de Usuário
            </summary>
            <returns>Lista de TipoUsuario e um status code</returns>
        </member>
        <member name="M:webapi.event_.Controllers.TipoUsuarioController.Put(System.Guid,webapi.event_.Domains.TipoUsuario)">
            <summary>
            Atualizar Tipo de Usuário existente passando o seu id
            </summary>
            <param name="id">Id do Objeto a ser atualizado</param>
            <param name="tipoUsuario">Objeto Tipo de Usuário com as novas informações</param>
            <returns>Status Code</returns>
        </member>
        <member name="M:webapi.event_.Controllers.TipoUsuarioController.Delete(System.Guid)">
            <summary>
            Deletar o Objeto pelo seu Id
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="T:webapi.event_.Migrations.BD_v2">
            <inheritdoc />
        </member>
        <member name="M:webapi.event_.Migrations.BD_v2.Up(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)">
            <inheritdoc />
        </member>
        <member name="M:webapi.event_.Migrations.BD_v2.Down(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)">
            <inheritdoc />
        </member>
        <member name="M:webapi.event_.Migrations.BD_v2.BuildTargetModel(Microsoft.EntityFrameworkCore.ModelBuilder)">
            <inheritdoc />
        </member>
        <member name="M:webapi.event_.Utils.Criptografia.GeraHash(System.String)">
            <summary>
            Gera uma Hash a partir de uma senha
            </summary>
            <param name="senha">Senha que receberá a hash</param>
            <returns>Senha Criptografada com a hash</returns>
        </member>
        <member name="M:webapi.event_.Utils.Criptografia.CompararHash(System.String,System.String)">
            <summary>
            Verifica se a hash da senha informada é igual á hash salva do bd
            </summary>
            <param name="senhaForm">Senha passada no form de Login</param>
            <param name="senhaBanco">Senha cadastrada no banco</param>
            <returns>True or False</returns>
        </member>
    </members>
</doc>
